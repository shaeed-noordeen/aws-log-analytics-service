name: Create Version Tag

on:
  push:
    branches: [ main ]

# GITHUB_TOKEN must be allowed to write tags
permissions:
  contents: write

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch tags/history so the action can compute next version

      # optional: skip on forks (safety)
      - name: Stop if running on a fork
        if: github.event.repository.fork == true
        run: |
          echo "Running on a fork â€” skipping tag creation."
          exit 78

      - name: Determine PR number from merge commit message
        id: pr
        shell: bash
        run: |
          MESSAGE=$(jq -r '.head_commit.message // ""' "$GITHUB_EVENT_PATH")
          if [[ "$MESSAGE" =~ \#([0-9]+) ]]; then
            echo "number=${BASH_REMATCH[1]}" >> "$GITHUB_OUTPUT"
          else
            echo "number=" >> "$GITHUB_OUTPUT"
          fi

      - name: Get PR title (if available)
        id: get_pr_title
        if: steps.pr.outputs.number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const pullNumber = Number(core.getInput('pr_number'));
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullNumber
            });
            core.setOutput('title', pr.title);
          pr_number: ${{ steps.pr.outputs.number }}

      # Create / bump semver tag; requires contents: write
      - name: Create new tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true
          RELEASE_BRANCHES: main
          INITIAL_VERSION: 0.0.0
          PRERELEASE_SUFFIX: beta
          VERBOSE: true
        with:
          commit-sha: ${{ github.sha }}
          custom_title: ${{ steps.get_pr_title.outputs.title }}

      - name: Tag output
        run: echo "New tag is ${{ steps.create_tag.outputs.tag }}"
